#------------------- prompt setting -------------------

obj_color="\e[36;1m"
bar_color="\e[35;1m"
end_color="\e[m"

right=$'\uf054'
double_right=$'\uf63d'
double_left=$'\uf63c'

function bar {
	echo "%F{13} - %f"
}

function git-branch {
	local branch_name st rs
  local branch_add="" branch_cmt="" branch_push="" branch_pull=""

	branch_name=`git symbolic-ref --short HEAD 2> /dev/null`
	
	if [ -z $branch_name ]; then
		return
	fi

	echo "`bar`%F{14}$branch_name"
}

# python prompt
export VIRTUAL_ENV_DISABLE_PROMPT=1
function python-env {
	local st
	# uv environment detection
	if [ -f "pyproject.toml" ] && [ -f "uv.lock" ]; then
		local python_ver=$(uv run python -c "import sys; print(f'py{sys.version_info.major}.{sys.version_info.minor}')" 2>/dev/null || echo "py")
		echo "`bar`%F{14}uv-${python_ver}%f"
		return
	elif [ -f ".venv/pyvenv.cfg" ]; then
		echo "`bar`%F{14}.venv%f"
		return
	elif [ -n "$VIRTUAL_ENV" ]; then
		st=`basename $VIRTUAL_ENV`
		echo "`bar`%F{14}$st%f"
		return
	elif [ -n "$CONDA_DEFAULT_ENV" ]; then
		echo "`bar`%F{14}$CONDA_DEFAULT_ENV%f"
		return
	else
		return
	fi
}

# node prompt
function node-env {
	if [ -f "package.json" ]; then
		local node_ver=`node -v 2>/dev/null | sed 's/v//'`
		if [ -n "$node_ver" ]; then
			# Check if using nvm
			local nvm_current=$(nvm current 2>/dev/null)
			if [ -n "$nvm_current" ] && [ "$nvm_current" != "system" ]; then
				echo "`bar`%F{14}⬢$node_ver(nvm)%f"
			else
				echo "`bar`%F{14}⬢$node_ver%f"
			fi
		fi
	fi
}

# ssh indicator - simple mark
function ssh-mark {
	if [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]; then
		echo "%F{11}◆%f "
	fi
}


setopt prompt_subst
PROMPT='$(ssh-mark)%F{14}%~%f`python-env``node-env``git-branch` %F{13}%f
%F{13}%f'
